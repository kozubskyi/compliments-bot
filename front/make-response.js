const axios = require('axios')
const { getStartCmdResponse, getComplimentCmdResponse, getElseResponse, separateCommand } = require('./helpers')
const { KOZUBSKYI_CHAT_ID, LENA_RAK_CHAT_ID, DB_BASE_URL } = process.env
const SWEET_CHAT_ID = Number(LENA_RAK_CHAT_ID)
const CREATOR_CHAT_ID = Number(KOZUBSKYI_CHAT_ID)

async function makeResponse(bot, { firstName, lastName, username, chatId, command }) {
  let response = null
  let buttonOptions = {}

  try {
    const user = await handleUser({ firstName, lastName, username, chatId, command })

    // user.status = 'creator'; //* ‚¨ÖÔ∏è for testing (creator, sweet, family, friend, others)

    if (command === '/start') response = getStartCmdResponse(user.status)
    else if (command === '/compliment') response = await getComplimentCmdResponse(user.status)
    else response = getElseResponse(user.status)

    if (user.status === 'creator') {
      const [adminCommand, data] = separateCommand(command)

      if (adminCommand === 'add') {
        const [status, text] = separateCommand(data)
        const resp = await axios.post(`${DB_BASE_URL}/compliments`, { text, for: status })

        response = `‚úÖ –ö–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫ –¥–æ–¥–∞–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö: ${JSON.stringify(resp.data)}`
      }
      if (adminCommand === 'addcompliments') {
        await axios.post(`${DB_BASE_URL}/compliments/all`, JSON.parse(data))

        response = '‚úÖ –í—Å—ñ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫–∏ –¥–æ–¥–∞–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö'
      }
      if (adminCommand === 'del') {
        const resp = await axios.delete(`${DB_BASE_URL}/compliments/text/${data}`)
        // –¶—ñ–∫–∞–≤–µ: –ø—Ä–∏ –º–µ—Ç–æ–¥—ñ DELETE –Ω–µ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è body, —ñ–Ω—Ñ—É –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ –ª–∏—à–µ —á–µ—Ä–µ—Ä params

        if (resp.data) {
          response = `‚úÖ –ö–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: ${JSON.stringify(resp.data)}`
        } else {
          response = '‚ÑπÔ∏è –¢–∞–∫–æ–≥–æ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫–∞ —ñ –Ω–µ –±—É–ª–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö'
        }
      }
      if (command === 'delcompliments') {
        await axios.delete(`${DB_BASE_URL}/compliments/`)

        response = '‚úÖ –í—Å—ñ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫–∏ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö'
      }
      if (adminCommand === 'mlr') {
        await bot.sendMessage(SWEET_CHAT_ID, data)
        response = '‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ'
      }
      if (adminCommand === 'msg') {
        const [receiverChatId, text] = separateCommand(data)

        await bot.sendMessage(Number(receiverChatId), text)
        response = '‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ'
      }
      if (command === '/compliments') {
        const resp = await axios.get(`${DB_BASE_URL}/compliments`)

        response = JSON.stringify(resp.data.map((compliment) => ({ text: compliment.text, for: compliment.for })))
      }
      if (command === '/complimentsq') {
        const resp = await axios.get(`${DB_BASE_URL}/compliments`)

        response = resp.data.length
      }
      if (command === '/users') {
        const resp = await axios.get(`${DB_BASE_URL}/users`)

        response = JSON.stringify(resp.data)
      }
      if (command === '/usersq') {
        const resp = await axios.get(`${DB_BASE_URL}/users`)

        response = resp.data.length
      }
      if (command === '/test') {
        response = '‚úÖ'
      }
      if (command === '/help') {
        response = `
        üó£Ô∏è –ö–æ–º–∞–Ω–¥–∏:
        "add _ __" - –¥–æ–¥–∞—Ç–∏ —É –±–∞–∑—É –¥–∞–Ω–∏—Ö –Ω–æ–≤–∏–π –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫ –¥–ª—è —Å—Ç–∞—Ç—É—Å—É _ –∑ —Ç–µ–∫—Å—Ç–æ–º __;
        "addcompliments _" - –¥–æ–¥–∞—Ç–∏ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö —É—Å—ñ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫–∏ –º–∞—Å–∏–≤—É _;
        "del _" - –≤–∏–¥–∞–ª–∏—Ç–∏ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫ –∑ —Ç–µ–∫—Å—Ç–æ–º _;
        "delcompliments" - –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫–∏ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö;
        "mlr _" - –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –û–ª–µ–Ω—ñ –†–∞–∫ –∑ —Ç–µ–∫—Å—Ç–æ–º _;
        "msg _ __" - –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑ chatId _ —ñ —Ç–µ–∫—Å—Ç–æ–º __;
        "/compliments" - –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–∞—Å–∏–≤ —Ç—ñ–ª—å–∫–∏ –∑ –ø–æ–ª—è–º–∏ text —Ç–∞ for —É—Å—ñ—Ö –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫—ñ–≤;
        "/complimentsq" - –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—Å—ñ—Ö –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫–æ–≤ —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö;
        "/users" - –æ—Ç—Ä–∏–º–∞—Ç–∏ –º–∞—Å–∏–≤ –∑ –ø–æ–≤–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤;
        "/usersq" - –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö;
        "/test" - —Ç–µ—Å—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞;
        "/help" - –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –∫–æ–º–∞–Ω–¥.
        `
      }
    }

    // buttonOptions = {
    //   reply_markup: JSON.stringify({
    //     inline_keyboard: [[{ text: "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫", callback_data: "/compliment" }]],
    //   }),
    // }

    await bot.sendMessage(chatId, response, buttonOptions)

    if (chatId !== CREATOR_CHAT_ID) {
      await bot.sendMessage(
        CREATOR_CHAT_ID,
        `‚ÑπÔ∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á "${firstName} ${lastName} <${username}> (${chatId})" –≤—ñ–¥–ø—Ä–∞–≤–∏–≤(-–ª–∞) –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "${command}" —ñ –æ—Ç—Ä–∏–º–∞–≤(-–ª–∞) –≤—ñ–¥–ø–æ–≤—ñ–¥—å "${response}"`
      )
    }
  } catch (err) {
    if (chatId !== CREATOR_CHAT_ID) {
      await bot.sendMessage(chatId, '–Ø —Ç—Ä–æ—à–∫–∏ –∑–ª–∞–º–∞–≤—Å—è, —Å–∫–æ—Ä–æ –ø–æ–ª–∞–≥–æ–¥–∂—É—Å—å —ñ –ø–æ–≤–µ—Ä–Ω—É—Å—å üë®‚Äçüîß‚öôÔ∏èüòä')
    }

    await bot.sendMessage(
      CREATOR_CHAT_ID,
      `‚ùå –ü–æ–º–∏–ª–∫–∞! –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á "${firstName} ${lastName} <${username}> (${chatId})" –≤—ñ–¥–ø—Ä–∞–≤–∏–≤(-–ª–∞) –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "${command}" —ñ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ "${
        err?.response?.data?.message ?? err
      }"`
    )
  }
}

async function handleUser({ firstName, lastName, username, chatId }) {
  const getAndUpdateUrl = `${DB_BASE_URL}/users/chatId/${chatId}`

  const { data } = await axios.get(getAndUpdateUrl)

  let response = null

  if (data) {
    response = await axios.patch(getAndUpdateUrl, { messages: data.messages + 1 })
  } else {
    response = await axios.post(`${DB_BASE_URL}/users`, {
      firstName,
      lastName,
      username,
      chatId,
    })

    await bot.sendMessage(
      CREATOR_CHAT_ID,
      `‚ÑπÔ∏è –ù–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ "${firstName} ${lastName} <${username}> (${chatId})" –¥–æ–¥–∞–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö`
    )
  }

  return response.data
}

module.exports = makeResponse
