//* npm - node-telegram-bot-api

require("dotenv").config() // –ë–µ–∑ —ç—Ç–æ–≥–æ –∫–æ–¥–∞ –ø–µ—Ä–µ–¥ require("node-telegram-bot-api") –∏ NTBA_FIX_319 = 1 –≤ —Ñ–∞–π–ª–µ .env –≤—ã–¥–∞–µ—Ç –æ—à–∏–±–∫—É:
// node-telegram-bot-api deprecated Automatic enabling of cancellation of promises is deprecated. In the future, you will have to enable it yourself. See https://github.com/yagop/node-telegram-bot-api/issues/319. at node:internal/modules/cjs/loader:1105:14
// –†–µ—à–µ–Ω–∏–µ: https://github.com/yagop/node-telegram-bot-api/issues/540

const TelegramBot = require("node-telegram-bot-api")
// const dotenv = require("dotenv")
const axios = require("axios")

// dotenv.config()
const { BOT_TOKEN, KOZUBSKYI_CHAT_ID, LENA_RAK_CHAT_ID, DB_BASE_URL } = process.env

const bot = new TelegramBot(BOT_TOKEN, { polling: true })

function start() {
  const SWEET_CHAT_ID = Number(LENA_RAK_CHAT_ID)
  const CREATOR_CHAT_ID = Number(KOZUBSKYI_CHAT_ID)

  bot.setMyCommands([
    // { command: "/start", description: "–ü–æ—á–∞—Ç–∏" },
    { command: "/compliment", description: "–û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫" },
  ])

  // üëá –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  bot.on("message", async (msg) => {
    console.log({ msg })
    // msg = {
    //   from: {
    //     first_name: "Name",
    //     last_name: "Surname",
    //     username: "nickname",
    //   },
    //   chat: {
    //     id: 123456789,
    //   },
    //   text: "message from user",
    // }

    await makeResponse({
      firstName: msg.from.first_name,
      lastName: msg.from.last_name,
      username: msg.from.username,
      chatId: msg.chat.id,
      command: msg.text,
    })
  })

  // üëá –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É (–µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å)
  // bot.on("callback_query", async (cb) => {
  //   await makeResponse({
  //     firstName: cb.from.first_name,
  //     lastName: cb.from.last_name,
  //     username: cb.from.username,
  //     chatId: cb.message.chat.id,
  //     command: cb.data,
  //   })
  // })

  async function makeResponse(user) {
    const { firstName, lastName, username, chatId, command } = user
    let response = null
    let buttonOptions = {}

    try {
      //todo - create user if he isn't in DB

      //todo - increase user.messages +1 if the user was in DB

      // await handleUser(user)

      if (chatId === SWEET_CHAT_ID) {
        if (command === "/start") {
          response =
            "–õ—î–Ω—É—Å—ñ–∫, –ø—Ä–∏–≤—ñ—Ç) üòò –î–µ–Ω–∏—Å –ø—Ä–æ—Å–∏–≤ –ø–µ—Ä–µ–¥–∞—Ç–∏ —Ç–æ–±—ñ –±–∞–≥–∞—Ç–æ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫—ñ–≤. –ù–∞–ø–∏—à–∏ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ /compliment —ñ –æ—Ç—Ä–∏–º–∞—î—à—å –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫)"
        } else if (command === "/compliment") {
          const { data } = await axios.get(`${DB_BASE_URL}/compliments`)
          const randomIndex = Math.floor(Math.random() * data.length)

          response = data[randomIndex][1]
        } else {
          response = "–Ø –ø–µ—Ä–µ–¥–∞–º –î–µ–Ω–∏—Å—É —Ç–µ, —â–æ —Ç–∏ –Ω–∞–ø–∏—Å–∞–ª–∞) üòò"
        }
      } else if (chatId === CREATOR_CHAT_ID) {
        const [adminCommand, newData] = separateCommand(command)

        if (adminCommand === "add") {
          await axios.post(`${DB_BASE_URL}/compliments`, { text: newData })

          response = "‚úÖ –ö–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫ –¥–æ–¥–∞–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö"
        } else if (adminCommand === "del") {
          await axios.delete(`${DB_BASE_URL}/compliments/${newData}`)

          response = "‚úÖ –ö–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∞–±–æ —Ç–∞–∫–æ–≥–æ —ñ –Ω–µ –±—É–ª–æ"
        } else if (adminCommand === "mlr") {
          await bot.sendMessage(SWEET_CHAT_ID, newData)

          response = "‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –õ—î–Ω—É—Å—ñ—á–∫–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ"
        } else if (adminCommand === "msg") {
          const [receiverChatId, text] = separateCommand(newData)

          await bot.sendMessage(Number(receiverChatId), text)
          response = "‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ"
        } else if (command === "/all") {
          const { data } = await axios.get(`${DB_BASE_URL}/compliments`)

          response = JSON.stringify(data)
        } else if (command === "/allq") {
          const { data } = await axios.get(`${DB_BASE_URL}/compliments`)

          response = data.length
        } else if (command === "/help") {
          response = `
        üó£Ô∏è –ö–æ–º–∞–Ω–¥–∏:
        "add _" - –¥–æ–¥–∞—Ç–∏ —É –±–∞–∑—É –¥–∞–Ω–∏—Ö –Ω–æ–≤–∏–π –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫ –∑ —Ç–µ–∫—Å—Ç–æ–º _;
        "del _" - –≤–∏–¥–∞–ª–∏—Ç–∏ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫ –∑ —Ç–µ–∫—Å—Ç–æ–º _;
        "mlr _" - –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –û–ª–µ–Ω—ñ –†–∞–∫ –∑ —Ç–µ–∫—Å—Ç–æ–º _;
        "msg _ __" - –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑ chatId _ —ñ —Ç–µ–∫—Å—Ç–æ–º __;
        "/all" - –æ—Ç—Ä–∏–º–∞—Ç–∏ entries —É—Å—ñ—Ö –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫–æ–≤;
        "/allq - –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—Å—ñ—Ö –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫–æ–≤ —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö.
        `
        } else {
          response = "‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –∫–æ–º–∞–Ω–¥–∞"
        }
      } else {
        if (command === "/start" || command === "/compliment") {
          response = "–ù–∞–∂–∞–ª—å –í–∏ –Ω–µ –û–ª–µ–Ω–∞ –†–∞–∫, –∞ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫–∏ —è —Ä–æ–±–ª—é –ª–∏—à–µ —ó–π ü§∑‚Äç‚ôÇÔ∏è"
          // buttonOptions = {
          //   reply_markup: JSON.stringify({
          //     inline_keyboard: [[{ text: "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫", callback_data: "/compliment" }]],
          //   }),
          // }
        } else {
          response = "–Ø –ø–µ—Ä–µ–¥–∞–º –î–µ–Ω–∏—Å—É —Ç–µ, —â–æ –í–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ üòâ"
        }
      }

      await bot.sendMessage(chatId, response, buttonOptions)

      if (chatId !== CREATOR_CHAT_ID) {
        await bot.sendMessage(
          CREATOR_CHAT_ID,
          `‚ÑπÔ∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á "${firstName} ${lastName} <${username}> (${chatId})" –≤—ñ–¥–ø—Ä–∞–≤–∏–≤(-–ª–∞) –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "${command}" —ñ –æ—Ç—Ä–∏–º–∞–≤(-–ª–∞) –≤—ñ–¥–ø–æ–≤—ñ–¥—å "${response}"`
        )
      }
    } catch (err) {
      if (chatId !== CREATOR_CHAT_ID) {
        await bot.sendMessage(chatId, "–Ø —Ç—Ä–æ—à–∫–∏ –∑–ª–∞–º–∞–≤—Å—è, —Å–∫–æ—Ä–æ –ø–æ–ª–∞–≥–æ–¥–∂—É—Å—å —ñ –ø–æ–≤–µ—Ä–Ω—É—Å—å üë®‚Äçüîß‚öôÔ∏èüòä")
      }

      await bot.sendMessage(
        CREATOR_CHAT_ID,
        `‚ùå –ü–æ–º–∏–ª–∫–∞! –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á "${firstName} ${lastName} <${username}> (${chatId})" –≤—ñ–¥–ø—Ä–∞–≤–∏–≤(-–ª–∞) –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "${command}" —ñ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ "${err.message}"`
      )
    }
  }

  async function handleUser({ firstName, lastName, username, chatId }) {
    await axios.post(`${DB_BASE_URL}/users`, { firstName, lastName, username, chatId })
  }

  function separateCommand(msg) {
    const msgArr = msg.split(" ")
    const cmd = msgArr[0]
    const text = msgArr.slice(1).join(" ")

    return [cmd, text]
  }
}

start()

/*

//* npm - telegraf

const { Telegraf } = require("telegraf")
const dotenv = require("dotenv")
const axios = require("axios")

dotenv.config()
const { BOT_TOKEN, KOZUBSKYI_CHAT_ID, LENA_RAK_CHAT_ID, DATADB_BASE_URL } = process.env

const bot = new Telegraf(BOT_TOKEN)

function start() {
  const sweet = "lena_rak_05"
  const creator = "kozubskyi"
  const sweetChatId = Number(LENA_RAK_CHAT_ID)
  const creatorChatId = Number(KOZUBSKYI_CHAT_ID)

  bot.on("text", async (ctx) => {
    const firstName = ctx.message.from.first_name
    const lastName = ctx.message.from.last_name
    const username = ctx.message.from.username
    const command = ctx.message.text
    const chatId = ctx.message.chat.id

    let response

    try {
      if (username === sweet) {
        if (command === "/start") {
          response =
            "–õ–µ–Ω—É—Å–∏–∫, –ø—Ä–∏–≤–µ—Ç–∏–∫) üòò –î–µ–Ω–∏—Å –ø—Ä–æ—Å–∏–ª –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–µ–±–µ –∫—É—á—É –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫–æ–≤. –ù–∞–ø–∏—à–∏ –∏–ª–∏ –Ω–∞–∂–º–∏ /compliment –∏ –ø–æ–ª—É—á–∏—à—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫)"
        } else if (command === "/compliment") {
          const { data } = await axios.get(DATADB_BASE_URL)
          const randomIndex = Math.floor(Math.random() * data.length)

          response = data[randomIndex].text
        } else {
          response = "–Ø –ø–µ—Ä–µ–¥–∞–º –î–µ–Ω–∏—Å—É —Ç–æ, —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—Å–∞–ª–∞) üòò"
        }
      } else if (username === creator) {
        const [adminCommand, newData] = separateCommand(command)

        if (adminCommand === "add") {
          await axios.post(DATADB_BASE_URL, { text: newData })

          response = "–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω"
        } else if (adminCommand === "del") {
          await axios.delete(`${DATADB_BASE_URL}/${newData}`)

          response = "–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"
        } else if (adminCommand === "mlr") {
          ctx.telegram.sendMessage(sweetChatId, newData)

          response = "–°–æ–æ–±—â–µ–Ω–∏–µ –ª—é–±–∏–º–æ–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
        } else if (adminCommand === "msg") {
          const [receiverChatId, text] = separateCommand(newData)

          ctx.telegram.sendMessage(Number(receiverChatId), text)
          response = "–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
        } else if (command === "/all") {
          const { data } = await axios.get(DATADB_BASE_URL)

          response = JSON.stringify(data)
        } else if (command === "/help") {
          response = `
        "add _" - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫ —Å —Ç–µ–∫—Å—Ç–æ–º _
        "del _" - —É–¥–∞–ª–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫ —Å —Ç–µ–∫—Å—Ç–æ–º _
        "mlr _" - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –õ–µ–Ω–µ –†–∞–∫ —Å —Ç–µ–∫—Å—Ç–æ–º _
        "msg _ __" - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å id —á–∞—Ç–∞ _ –∏ —Ç–µ–∫—Å—Ç–æ–º __
        "/all" - –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫–æ–≤
        `
        } else {
          response = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"
        }
      } else {
        if (command === "/start" || command === "/compliment") {
          response = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –í—ã –Ω–µ –ï–ª–µ–Ω–∞ –†–∞–∫, –∞ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∏–∫–∏ —è –¥–µ–ª–∞—é —Ç–æ–ª—å–∫–æ –µ–π ü§∑‚Äç‚ôÇÔ∏è"
        } else {
          response = "–Ø –ø–µ—Ä–µ–¥–∞–º –î–µ–Ω–∏—Å—É —Ç–æ, —á—Ç–æ –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ üòâ"
        }
      }

      ctx.reply(response)

      username !== creator &&
        ctx.telegram.sendMessage(
          creatorChatId,
          `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${firstName} ${lastName} <${username}> (${chatId})" –æ—Ç–ø—Ä–∞–≤–∏–ª(-–∞) —Å–æ–æ–±—â–µ–Ω–∏–µ "${command}" –∏ –ø–æ–ª—É—á–∏–ª(-–∞) –æ—Ç–≤–µ—Ç "${response}"`
        )
    } catch (err) {
      username !== creator && ctx.reply("–Ø –Ω–µ–º–Ω–æ–∂–∫–æ —Å–ª–æ–º–∞–ª—Å—è, —Å–∫–æ—Ä–æ –ø–æ—á–∏–Ω—é—Å—å –∏ –≤–µ—Ä–Ω—É—Å—å üë®‚Äçüîß‚öôÔ∏èüòä")

      ctx.telegram.sendMessage(
        creatorChatId,
        `‚ùå –û—à–∏–±–∫–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${firstName} ${lastName} <${username}> (${chatId})" –æ—Ç–ø—Ä–∞–≤–∏–ª(-–∞) —Å–æ–æ–±—â–µ–Ω–∏–µ "${command}" –∏ –ø–æ–ª—É—á–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞ "${err.message}"`
      )
    }
  })
}

start()

bot.launch()

// Enable graceful stop
process.once("SIGINT", () => bot.stop("SIGINT"))
process.once("SIGTERM", () => bot.stop("SIGTERM"))

function separateCommand(msg) {
  const msgArr = msg.split(" ")
  let data = msgArr[0]
  let text = msgArr.slice(1).join(" ")

  return [data, text]
}

*/

