const axios = require('axios')
const { DB_BASE_URL } = process.env

function getStartCmdResponse(status) {
  let response = ''
  let buttons = {
    reply_markup: JSON.stringify({
      inline_keyboard: [
        [
          { text: '–ö–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫', callback_data: '/compliment' },
          { text: '–ü–æ–±–∞–∂–∞–Ω–Ω—è—á–∫–æ', callback_data: '/wish' },
        ],
      ],
    }),
  }

  if (status === 'sweet') {
    response =
      '–õ—î–Ω—É—Å—ñ—á–∫–∞, –ø—Ä–∏–≤—ñ—Ç) üòä –î–µ–Ω–∏—Å –ø—Ä–æ—Å–∏–≤ –ø–µ—Ä–µ–¥–∞—Ç–∏ —Ç–æ–±—ñ –±–∞–≥–∞—Ç–æ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫—ñ–≤ —Ç–∞ –ø–æ–±–∞–∂–∞–Ω–Ω—è—á–æ–∫. –ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω—É –∫–Ω–æ–ø–∫—É, –∞–±–æ –Ω–∞–ø–∏—à–∏ /compliment —á–∏ /wish üòò'
  } else if (status === 'creator') {
    response = '–ü—Ä–∏–≤—ñ—Ç, —Ç–≤–æ—Ä–µ—Ü—å) –ø—Ä–∞—Ü—é—é –∫–æ—Ä–µ–∫—Ç–Ω–æ üòä'
  } else {
    response = '–ü—Ä–∏–≤—ñ—Ç üòä –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–±–∞–∂–∞–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –∞–±–æ –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ç–µ–∫—Å—Ç–æ–º /wish'
    buttons = {
      reply_markup: JSON.stringify({
        inline_keyboard: [[{ text: '–ü–æ–±–∞–∂–∞–Ω–Ω—è', callback_data: '/wish' }]],
      }),
    }
  }

  return { response, buttons }
}

async function getRandomCompliment(status) {
  let response = null

  if (status) {
    response = await axios.get(`${DB_BASE_URL}/compliments/${status}`)
  } else {
    response = await axios.get(`${DB_BASE_URL}/compliments`)
  }
  const randomIndex = Math.floor(Math.random() * response.data.length)

  const chosenCompliment = response.data[randomIndex]
  const { _id, sendings } = chosenCompliment

  await axios.patch(`${DB_BASE_URL}/compliments/${_id}`, { sendings: sendings + 1 })

  return chosenCompliment
}

async function getComplimentCmdResponse(status) {
  let chosenCompliment = null

  if (status === 'sweet' || status === 'creator') {
    chosenCompliment = await getRandomCompliment(status)
  } else {
    chosenCompliment = await getRandomCompliment('others')
  }

  return { response: chosenCompliment.text }
}

function getElseResponse(status) {
  let response = null

  if (status === 'sweet') response = '–Ø –ø–µ—Ä–µ–¥–∞–º –î–µ–Ω–∏—Å—É —Ç–µ, —â–æ —Ç–∏ –Ω–∞–ø–∏—Å–∞–ª–∞) üòò'
  else if (status === 'creator') response = '‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –∫–æ–º–∞–Ω–¥–∞'
  else response = '–Ø –ø–µ—Ä–µ–¥–∞–º –î–µ–Ω–∏—Å—É —Ç–µ, —â–æ –í–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ üòâ'

  return response
}

function separateCommand(msg) {
  const msgArr = msg.split(' ')
  const cmd = msgArr[0]
  const text = msgArr.slice(1).join(' ')

  return [cmd, text]
}

module.exports = {
  getStartCmdResponse,
  getComplimentCmdResponse,
  getElseResponse,
  separateCommand,
}
