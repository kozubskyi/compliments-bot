const axios = require('axios');
const { DB_BASE_URL } = process.env;

async function getRandomMessage(type, status) {
  const { data } = await axios.get(`${DB_BASE_URL}/messages/${type}/${status}`);

  if (!data.length) {
    const variants = { compliment: '–∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏–∫—ñ–≤', wish: '–ø–æ–±–∞–∂–∞–Ω–Ω—è—á–æ–∫' };

    return { text: `–ù–∞–∂–∞–ª—å –ø–æ–∫–∏ —â–æ —è –Ω–µ –º–∞—é ${variants[type]}, –≤–∏–±–∞—á üò•` };
  }

  const randomIndex = Math.floor(Math.random() * data.length);

  const chosenMessage = data[randomIndex];
  const { _id, sendings } = chosenMessage;

  await axios.patch(`${DB_BASE_URL}/messages/${_id}`, { sendings: sendings + 1 });

  return chosenMessage;
}

module.exports = async function handleComplimentOrWishCommand(type, status) {
  let reply = '';

  if (type === 'compliment' && status !== 'sweet') {
    reply = '–í–∏–±–∞—á, –∞–ª–µ –∫–æ–º–ø–ª—ñ–º–µ–Ω—Ç–∏ —è —Ä–æ–±–ª—é –ª–∏—à–µ –û–ª–µ–Ω—ñ –†–∞–∫. –î–ª—è —É—Å—ñ—Ö —ñ–Ω—à–∏—Ö —è –≤—ñ–¥–ø—Ä–∞–≤–ª—è—é –ø–æ–±–∞–∂–∞–Ω–Ω—è.';
  } else {
    const { text } = await getRandomMessage(type, status);

    reply = text;
  }

  return reply;
};
