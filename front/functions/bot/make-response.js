const handleUser = require('./helpers/handle-user')
const commandHandlers = require('./command-handlers')
const { BOT_USERNAME, CREATOR_USERNAME, CREATOR_CHAT_ID } = require('./helpers/constants')

async function makeResponse(ctx, msgData) {
  const { firstName, lastName, username, chatId, value } = msgData

  let reply = ''

  try {
    const user = await handleUser(ctx, { firstName, lastName, username, chatId })

    // user.status = 'sweet'; //* ‚¨ÖÔ∏è for testing (creator, sweet, others)

    if (value === '/start' || value === `/start@${BOT_USERNAME}`) {
      reply = commandHandlers.handleStartCommand(user)
    } else if (value === '/compliment' || value === `/compliment@${BOT_USERNAME}`) {
      reply = await commandHandlers.handleComplimentCommand(user.status)
    } else if (value === '/help' || value === `/help@${BOT_USERNAME}`) {
      reply = await commandHandlers.handleHelpCommand(user)
    } else {
      reply = await commandHandlers.handleElseCommands(ctx, user.status, value)
    }

    await ctx.replyWithHTML(reply)

    username !== CREATOR_USERNAME &&
      (await ctx.telegram.sendMessage(
        CREATOR_CHAT_ID,
        `‚ÑπÔ∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á "${firstName} ${lastName} <${username}> (${chatId})" –≤—ñ–¥–ø—Ä–∞–≤–∏–≤(-–ª–∞) –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "${value}" —ñ –æ—Ç—Ä–∏–º–∞–≤(-–ª–∞) –≤—ñ–¥–ø–æ–≤—ñ–¥—å "${reply}"`
      ))
  } catch (err) {
    username !== CREATOR_USERNAME && (await ctx.reply('–Ø —Ç—Ä–æ—à–∫–∏ –∑–ª–∞–º–∞–≤—Å—è, —Å–∫–æ—Ä–æ –ø–æ–ª–∞–≥–æ–¥–∂—É—Å—å —ñ –ø–æ–≤–µ—Ä–Ω—É—Å—å üë®‚Äçüîß‚öôÔ∏èüòä'))

    await ctx.telegram.sendMessage(
      CREATOR_CHAT_ID,
      `‚ùå –ü–æ–º–∏–ª–∫–∞! –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á "${firstName} ${lastName} <${username}> (${chatId})" –≤—ñ–¥–ø—Ä–∞–≤–∏–≤(-–ª–∞) –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "${value}" —ñ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ "${
        err?.response?.data?.message ?? err
      }"`
    )
  }
}

module.exports = makeResponse
